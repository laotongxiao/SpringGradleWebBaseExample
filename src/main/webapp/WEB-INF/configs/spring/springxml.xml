<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--本配置文件是供名为springxml.xml的DispathcherServlet使用,提供其相关的Spring MVC配置-->

    <!--启用Spring其于annotation的DI,使用户可以在Spring MVC中使用Spring的强大功能.
        激活@Required @Autowired,JSR 250's @PostConstruct, @PreDestroy and @Resource等标注
    -->
    <context:annotation-config/>

    <!--DispatcherServlet上下,只管理@Controller类型的bean,忽略其他型的bean,如@Service-->
    <context:component-scan base-package="com.demo01">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--HandlerMapping,无需配置,Sping MVC可以默认启用.
    DefaultAnnotationHandlerMapping annotation-driven HandlerMapping
    -->
    <!--扩充了注解驱动,可以将请求参数绑定到按制器参数-->
    <mvc:annotation-driven/>

    <!--静态资源处理,js , css ,fonts, images-->
    <!--resources指的是WEB-INF目录下的resources-->
    <mvc:resources mapping="/resources/**" location="/resources/"/>
    <mvc:resources mapping="/resources/js/**" location="/resources/js/" />
    <mvc:resources mapping="/resources/css/**" location="/resources/css/" />
    <mvc:resources mapping="/resources/fonts/**" location="/resources/fonts/" />
    <mvc:resources mapping="/resources/images/**" location="/resources/images/" />
    <mvc:resources mapping="/resources/upload/**" location="/resources/upload/" />

    <!--配置ViewResolver
        可以用多个ViewResolver
        使用order属性排序
        InternalResourceViewResolver放在最后
    -->
    <!--在.jsp页面展现不同的数据格式如xml ,json-->
    <bean class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">

        <property name="mediaTypes">
            <map>
                <entry key="json" value="application/json"/>
                <entry key="xml" value="application/xml"/>
                <entry key="htm" value="text/html"/>
            </map>
        </property>
    </bean>
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1"/>
        <property name="defaultViews">
            <list>
            <!--JSON View-->
            <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsps/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--启用Spring文件上传功能 200*1024*1024即200M resolveLazily属性启用是为了推迟文件解析,以便捕获文件大小异常-->
    <!--id="multipartResolver"注意这个一定要写-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="209715200" />
        <property name="defaultEncoding" value="UTF-8" />
        <property name="resolveLazily" value="true" />
    </bean>

</beans>